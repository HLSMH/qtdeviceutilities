/****************************************************************************
**
** Copyright (C) 2014 Digia Plc
** All rights reserved.
** For any questions to Digia, please use the contact form at
** http://www.qt.io
**
** This file is part of Qt Enterprise Embedded.
**
** Licensees holding valid Qt Enterprise licenses may use this file in
** accordance with the Qt Enterprise License Agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.
**
** If you have questions regarding the use of this file, please use
** the contact form at http://www.qt.io
**
****************************************************************************/
/*!
//! [setting up usb access]
    On Ubuntu Linux, the development user account must have access to plugged in
    devices. To allow the development user access to the device via USB, create
    a new \e{udev} rule:

    \list 1

        \li Run the following command in a shell:

    \badcode
        echo 'SUBSYSTEM=="usb", ATTRS{idVendor}=="18d1", TAG+="udev-acl", TAG+="uaccess"' | sudo tee -a /etc/udev/rules.d/70-boot2qt.rules
    \endcode

        \li Connect the running device to the development host with a USB
    cable. If the device is already connected, disconnect and reconnect the USB
    cable after running the command above.

        \li You can confirm that the connection is working by running
    the following shell command:

    \code
        <INSTALL_DIR>/Tools/b2qt/adb devices -l
    \endcode

    The output should be a list of connected \B2Q (and Android) devices,
    identified with a serial number and a name. If your device is missing from
    the list, or the serial number is \c{??????}, the connection is
    not working properly. Check that the device is powered on, and disconnect
    and reconnect the USB cable.

    The emulator may be listed as well. Its serial number is its IP and the port
    number: \c{192.168.56.101:5555}.
    \endlist

    The system log files \c{/var/log/udev} and \c{/var/log/syslog} may
    provide relevant information in case of connection problems.
//! [setting up usb access]

//! [configuring device kit]
//! [common config device kit]
    After you have prepared the hardware, you must perform one final step
    to set up the development tools in Qt Creator for your device. That is,
    you must configure the correct device to be used for each build and run
    \e{kit}. Connect your device to the development host via USB and launch
    Qt Creator. In Qt Creator:

//! [common config device kit]
//! [steps for device kit]
    \list 1
        \li Select \b{Tools > Options > Build & Run > Kits}.
        \li Select one of the predefined kits starting with \e{Boot to Qt...}
        that matches the type of your device.
        \li Select the correct device in the \b{Device} field.
        \li Select \b{OK}.
    \endlist
//! [steps for device kit]
//! [configuring device kit]

//! [configuring network device]
    After you have prepared the hardware, you must set up the development tools
    in Qt Creator for your device. Connect your device to the network via an
    Ethernet cable and launch Qt Creator. In Qt Creator:

    \list 1
        \li Select \b{Tools > Options > Devices > Add}.
        \li Select \b{Boot2Qt Device} > \b{Start Wizard}.
        \li Enter the device name and network address (IPv4). You can check the
            device address in the \e{Launcher Settings} when the device is running
            the \B2Q demo.
        \li Select \b{Finish}.
    \endlist

    You also have to configure the correct device to be used for each build and
    run \e{kit}:

    \include b2qt-post-install-setup.qdocinc steps for device kit

//! [configuring network device]

//! [configuring device kit linux]
    \include b2qt-post-install-setup.qdocinc common config device kit
    \include b2qt-post-install-setup.qdocinc steps for device kit
//! [configuring device kit linux]
*/
