import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable B2Qt.Wifi 1.0 /system/qml/B2Qt/Wifi/'

Module {
    Component {
        name: "QWifiConfiguration"
        prototype: "QObject"
        exports: ["B2Qt.Wifi/WifiConfiguration 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "ssid"; type: "string" }
        Property { name: "passphrase"; type: "string" }
        Property { name: "protocol"; type: "string" }
    }
    Component {
        name: "QWifiDevice"
        prototype: "QObject"
        exports: ["B2Qt.Wifi/WifiDevice 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Method { name: "wifiSupported"; type: "bool" }
    }
    Component {
        name: "QWifiManager"
        prototype: "QObject"
        exports: ["B2Qt.Wifi/WifiManager 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Enum {
            name: "NetworkState"
            values: {
                "Disconnected": 0,
                "Authenticating": 1,
                "HandshakeFailed": 2,
                "ObtainingIPAddress": 3,
                "DhcpRequestFailed": 4,
                "Connected": 5
            }
        }
        Enum {
            name: "BackendState"
            values: {
                "Initializing": 0,
                "Running": 1,
                "Terminating": 2,
                "NotRunning": 3
            }
        }
        Property { name: "networkState"; type: "NetworkState"; isReadonly: true }
        Property { name: "backendState"; type: "BackendState"; isReadonly: true }
        Property { name: "scanning"; type: "bool" }
        Property { name: "currentSSID"; type: "string"; isReadonly: true }
        Property { name: "lastError"; type: "string"; isReadonly: true }
        Property { name: "networks"; type: "QAbstractListModel"; isReadonly: true; isPointer: true }
        Signal {
            name: "scanningChanged"
            Parameter { name: "scanning"; type: "bool" }
        }
        Signal {
            name: "networkStateChanged"
            Parameter { name: "networkState"; type: "NetworkState" }
        }
        Signal {
            name: "backendStateChanged"
            Parameter { name: "backendState"; type: "BackendState" }
        }
        Signal {
            name: "currentSSIDChanged"
            Parameter { name: "currentSSID"; type: "string" }
        }
        Signal {
            name: "lastErrorChanged"
            Parameter { name: "error"; type: "string" }
        }
        Method { name: "start" }
        Method { name: "stop" }
        Method {
            name: "connect"
            type: "bool"
            Parameter { name: "config"; type: "QWifiConfiguration"; isPointer: true }
        }
        Method { name: "disconnect" }
    }
}
